* Asynchronous Chat Application using Python, asyncio, and WebSockets

This project is a simple chat application that allows multiple clients to connect to a server and send messages to each other in real-time. 
The chat application is implemented using asynchronous programming in Python, utilizing the `asyncio` and `websockets` libraries.

* Features

- Real-time communication between clients and the server using WebSocket
- Asynchronous handling of multiple client connections using asyncio
- Broadcasting messages to all connected clients
- Private messaging between clients
- Message history with limited message retention

* Requirements

- Python 3.7 or higher
- `websockets` library (install using `pip install websockets`)

* How to Use

- Run the server using the `server.py` script:

python server.py


- Multiple clients can connect to the server using the client.py script:

python client.py


- Enter a nickname when prompted by the client to join the chat.
- Once connected, clients can send messages to the server, and the server will broadcast the messages to all connected clients.
- To send a private message to a specific client, start the message with "@" followed by the recipient's nickname, e.g., @recipient Hello, this is a private message.



* Project Structure

server.py: The WebSocket server implementation using asyncio. Handles client connections, message broadcasting, and private messaging.
client.py: The client implementation using asyncio and websockets. Connects to the server and handles sending/receiving messages.
